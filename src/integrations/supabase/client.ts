
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://yiuarktentdjkxzgqtjg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InlpdWFya3RlbnRkamt4emdxdGpnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ1NzEyNjAsImV4cCI6MjA2MDE0NzI2MH0.Ei8RA_Q1ZimDWifBElmeA3XoFvIvezlUsvhxzwoLbzE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a helper function to initialize the database if needed
export const initializeDatabase = async () => {
  try {
    // Check if the sales table exists
    const { data, error } = await supabase
      .from('sales')
      .select('id')
      .limit(1);
    
    // If we get an error that's not a permission error, the table might not exist
    if (error && error.code === 'PGRST116') {
      console.log('Sales table does not exist. Creating it...');
      
      // We'll use RPC to create the table if it doesn't exist
      const { error: rpcError } = await supabase.rpc('create_sales_table_if_not_exists');
      
      if (rpcError) {
        console.error('Could not create sales table:', rpcError);
      }
    }
  } catch (error) {
    console.error('Error initializing database:', error);
  }
};

// Call this function when the app starts to ensure the sales table exists
initializeDatabase();
